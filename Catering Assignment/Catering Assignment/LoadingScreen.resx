<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        6yyn0LrpQgEAOw==
</value>
  </data>
</root>